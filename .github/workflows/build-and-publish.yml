name: Build and Publish

on:
  push:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    
    outputs:
      version: ${{ steps.package-info.outputs.version }}
      package-name: ${{ steps.package-info.outputs.package-name }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level=moderate
    
    - name: Run linting
      run: npm run lint
    
    - name: Compile TypeScript
      run: npm run compile
    
    - name: Run tests
      run: npm test
    
    - name: Get package info
      id: package-info
      run: |
        VERSION=$(node -p "require('./package.json').version")
        PACKAGE_NAME=$(node -p "require('./package.json').name")
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "package-name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
        echo "Package: $PACKAGE_NAME@$VERSION"
    
    - name: Package extension
      run: npm run package
    
    - name: Upload VSIX artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ steps.package-info.outputs.package-name }}-${{ steps.package-info.outputs.version }}
        path: "*.vsix"
        retention-days: 30

  publish-marketplace:
    needs: build-and-package
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download VSIX artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build-and-package.outputs.package-name }}-${{ needs.build-and-package.outputs.version }}
    
    - name: Publish to VS Code Marketplace
      run: npx vsce publish --packagePath ${{ needs.build-and-package.outputs.package-name }}-${{ needs.build-and-package.outputs.version }}.vsix
      env:
        VSCE_PAT: ${{ secrets.VSCE_PAT }}
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ needs.build-and-package.outputs.version }}
        name: Release v${{ needs.build-and-package.outputs.version }}
        body: |
          ðŸš€ **Release v${{ needs.build-and-package.outputs.version }}**
          
          This release has been automatically published to the VS Code Marketplace.
          
          ## Installation
          - **VS Code Marketplace**: Search for "Entitled" in VS Code Extensions
          - **Manual Installation**: Download the `.vsix` file below and install via `code --install-extension`
          
          ## Changes
          See [CHANGELOG.md](CHANGELOG.md) for detailed changes.
        files: |
          *.vsix
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-open-vsx:
    needs: build-and-package
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' || github.event_name == 'push' && github.ref == 'refs/heads/master'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Download VSIX artifact
      uses: actions/download-artifact@v4
      with:
        name: ${{ needs.build-and-package.outputs.package-name }}-${{ needs.build-and-package.outputs.version }}
    
    - name: Publish to Open VSX Registry
      run: npx ovsx publish ${{ needs.build-and-package.outputs.package-name }}-${{ needs.build-and-package.outputs.version }}.vsix
      env:
        OVSX_PAT: ${{ secrets.OVSX_PAT }}

  notify-success:
    needs: [build-and-package, publish-marketplace, publish-open-vsx]
    runs-on: ubuntu-latest
    if: always() && needs.build-and-package.result == 'success'
    
    steps:
    - name: Notify Success
      run: |
        echo "ðŸŽ‰ Successfully published ${{ needs.build-and-package.outputs.package-name }} v${{ needs.build-and-package.outputs.version }}"
        echo "ðŸ“¦ Marketplace: https://marketplace.visualstudio.com/items?itemName=ASHURTECH.NET.${{ needs.build-and-package.outputs.package-name }}"
        echo "ðŸ”— Open VSX: https://open-vsx.org/extension/ASHURTECH.NET/${{ needs.build-and-package.outputs.package-name }}"
